{
  "name": "single-resource-rest-api",
  "version": "0.1.0",
  "description": "Create a single resource rest API with Express that's backed by Mongo. I'm leaving this pretty open to interpretation. I want you to write this from scratch, don't just copy and paste code from class or previous projects. Add a feature of Mongoose that we didn't use class, such as data validation.",
  "main": "index.js",
  "scripts": {
    "test": "./node_modules/grunt-cli/bin/grunt test",
    "start": "node server.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/redfieldstefan/single-resource-rest-api.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/redfieldstefan/single-resource-rest-api/issues"
  },
  "homepage": "https://github.com/redfieldstefan/single-resource-rest-api",
  "devDependencies": {
    "chai": "^2.3.0",
    "chai-http": "^1.0.0",
    "grunt": "^0.4.5",
    "grunt-cli": "^0.1.13",
    "grunt-contrib-clean": "^0.6.0",
    "grunt-contrib-copy": "^0.8.0",
    "grunt-contrib-jshint": "^0.11.2",
    "grunt-contrib-watch": "^0.6.1",
    "grunt-nodemon": "^0.4.0",
    "grunt-simple-mocha": "^0.4.0",
    "grunt-webpack": "^1.0.8",
    "mocha": "^2.2.4",
    "node-libs-browser": "^0.5.2",
    "superagent": "^1.2.0",
    "superagent-cli": "^1.5.5",
    "webpack": "^1.9.10",
    "webpack-dev-server": "^1.9.0"
  },
  "dependencies": {
    "bcrypt-nodejs": "0.0.3",
    "body-parser": "^1.12.3",
    "eat": "^0.1.1",
    "express": "^4.12.3",
    "mongoose": "^4.0.2",
    "mongoose-validator": "^1.0.3",
    "passport": "^0.2.1",
    "passport-http": "^0.2.2",
    "uuid": "^2.0.1"
  }
}
